#!/usr/bin/env ruby
# File managed with puppet. Local changes will be OVERWRITTEN.

require 'fileutils'
require 'etc'

$stdout.sync = true
$stderr.sync = true

# post-receive hooks set GIT_DIR to the current repository. If you want to
# clone from a non-local repository, set this to the URL of the repository,
# such as git@git.host:puppet.git
SOURCE_REPOSITORY = File.expand_path(ENV['GIT_DIR'])

# The git_dir environment variable will override the --git-dir, so we remove it
# to allow us to create new directories cleanly.
ENV.delete('GIT_DIR')

# Run a command, return its output and abort if it fails
def do_cmd(cmd)
   ret = %x{#{cmd}}
   if $?.exitstatus != 0
     puts("'#{cmd}' failed. Giving up.")
     exit 1
   end
   ret
end

# You can push multiple refspecs at once, like 'git push origin branch1 branch2',
# so we need to handle each one.
$stdin.each_line do |line|
  oldrev, newrev, refname = line.split(" ")

  # Determine the branch name from the refspec we're received, which is in the
  # format refs/heads/<branch>, and make sure that it doesn't have any possibly
  # dangerous characters
  branchname = refname.sub(%r{^refs/heads/(.*$)}) { $1 }
  if branchname =~ /[\W]/
    puts %Q{Branch "#{branchname}" contains non-word characters, ignoring it.}
    next
  end

  puppet_ssl_dir = "/var/lib/puppet/ssl"
  puppetmaster_pem_name = "tf-infra-puppetmaster.mosi.mirantis.net.pem"
  puppet_server_cache_endpoint = "https://localhost:8140/puppet-admin-api/v1/environment-cache"
  do_cmd("r10k deploy environment --puppetfile --verbose info #{branchname}")
end
